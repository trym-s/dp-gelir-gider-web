"""init2

Revision ID: 1d78e45f7ab4
Revises: 29ab2d97c9c7
Create Date: 2025-07-30 11:44:03.557560

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1d78e45f7ab4'
down_revision = '29ab2d97c9c7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('daily_balances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bank_account_id', sa.Integer(), nullable=False),
    sa.Column('entry_date', sa.Date(), nullable=False),
    sa.Column('morning_balance', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('evening_balance', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['bank_account_id'], ['bank_account.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('bank_account_id', 'entry_date', name='_daily_balances_uc')
    )
    op.create_table('kmh_limits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('bank_account_id', sa.Integer(), nullable=False),
    sa.Column('kmh_limit', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('statement_day', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bank_account_id'], ['bank_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_risks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('kmh_limit_id', sa.Integer(), nullable=False),
    sa.Column('entry_date', sa.Date(), nullable=False),
    sa.Column('morning_risk', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('evening_risk', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['kmh_limit_id'], ['kmh_limits.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('kmh_limit_id', 'entry_date', name='_kmh_risk_date_uc')
    )
    op.drop_table('daily_balance')
    with op.batch_alter_table('bank_account', schema=None) as batch_op:
        batch_op.add_column(sa.Column('account_type', sa.Enum('VADESIZ', 'KMH', 'KREDI_KARTI', name='bankaccounttype'), server_default='VADESIZ', nullable=False))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=120, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('iban_number',
               existing_type=sa.VARCHAR(length=34, collation='SQL_Latin1_General_CP1_CI_AS'),
               nullable=True)
        batch_op.drop_column('overdraft_limit')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('bank_account', schema=None) as batch_op:
        batch_op.add_column(sa.Column('overdraft_limit', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
        batch_op.alter_column('iban_number',
               existing_type=sa.VARCHAR(length=34, collation='SQL_Latin1_General_CP1_CI_AS'),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=120, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('account_type')

    op.create_table('daily_balance',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('morning_balance', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('evening_balance', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DATETIME(), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DATETIME(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['bank_account.id'], name=op.f('FK__daily_bal__accou__6383C8BA')),
    sa.PrimaryKeyConstraint('id', name=op.f('PK__daily_ba__3213E83FB1C5FC20'))
    )
    op.drop_table('daily_risks')
    op.drop_table('kmh_limits')
    op.drop_table('daily_balances')
    # ### end Alembic commands ###
