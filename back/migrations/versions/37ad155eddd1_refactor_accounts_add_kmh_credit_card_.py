"""Refactor accounts, add kmh, credit card, status models

Revision ID: 37ad155eddd1
Revises: 0cd191b85d0b
Create Date: 2025-07-28 10:03:16.858325

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '37ad155eddd1'
down_revision = '0cd191b85d0b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.rename_table('bank', 'banks')
    op.create_table('card_brands',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('status_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('subject_type', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('credit_card',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('card_brand_id', sa.Integer(), nullable=False),
    sa.Column('credit_card_limit', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('cash_advance_limit', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('statement_day', sa.Integer(), nullable=False),
    sa.Column('due_day', sa.Integer(), nullable=False),
    sa.Column('expiration_date', sa.Date(), nullable=False),
    sa.Column('credit_card_no', sa.String(length=255), nullable=False),
    sa.Column('cvc', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['card_brand_id'], ['card_brands.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('kmh_limits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('kmh_limit', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('statement_day', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_credit_card_limits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('credit_card_id', sa.Integer(), nullable=False),
    sa.Column('entry_date', sa.Date(), nullable=False),
    sa.Column('morning_limit', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('evening_limit', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['credit_card_id'], ['credit_card.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('credit_card_id', 'entry_date', name='_cc_limit_date_uc')
    )
    op.drop_table('kmh_definitions')
    op.drop_table('account_status_history')
    
    op.execute('ALTER TABLE accounts DROP CONSTRAINT DF__accounts__accoun__0880433F')
    with op.batch_alter_table('accounts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.drop_constraint('FK__accounts__bank_i__43D61337', type_='foreignkey')
        batch_op.create_foreign_key('fk_accounts_bank_id_banks', 'banks', ['bank_id'], ['id'])
        
        batch_op.drop_column('account_type')

    with op.batch_alter_table('bank_log', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('FK__bank_log__bank_i__1DB06A4F'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'banks', ['bank_id'], ['id'])

    with op.batch_alter_table('daily_balances', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('FK__daily_bal__bank___489AC854'), type_='foreignkey')
        batch_op.drop_column('bank_id')
        
    op.execute('TRUNCATE TABLE daily_risks')
    
    with op.batch_alter_table('daily_risks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('kmh_limit_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint(batch_op.f('FK__daily_ris__accou__03BB8E22'), type_='foreignkey')
        batch_op.drop_constraint('_account_risk_date_uc', type_='unique')
        batch_op.create_foreign_key(None, 'kmh_limits', ['kmh_limit_id'], ['id'])
        batch_op.drop_column('account_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('daily_risks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('account_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('FK__daily_ris__accou__03BB8E22'), 'accounts', ['account_id'], ['id'])
        batch_op.drop_column('kmh_limit_id')

    with op.batch_alter_table('daily_balances', schema=None) as batch_op:
        batch_op.add_column(sa.Column('bank_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key(batch_op.f('FK__daily_bal__bank___489AC854'), 'bank', ['bank_id'], ['id'])

    with op.batch_alter_table('bank_log', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('FK__bank_log__bank_i__1DB06A4F'), 'bank', ['bank_id'], ['id'])

    with op.batch_alter_table('accounts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('account_type', sa.VARCHAR(length=11, collation='Turkish_CI_AS'), server_default=sa.text("('VADESIZ')"), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('FK__accounts__bank_i__43D61337'), 'bank', ['bank_id'], ['id'])
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    op.create_table('bank',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100, collation='Turkish_CI_AS'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='PK__bank__3213E83FBC059C3E')
    )
    op.create_table('account_status_history',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50, collation='Turkish_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('reason', sa.VARCHAR(collation='Turkish_CI_AS'), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DATETIME(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], name=op.f('FK__account_s__accou__7755B73D')),
    sa.PrimaryKeyConstraint('id', name=op.f('PK__account___3213E83F1916B9E3'))
    )
    op.create_table('kmh_definitions',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('kmh_limit', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=False),
    sa.Column('statement_day', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], name=op.f('FK__kmh_defin__accou__078C1F06')),
    sa.PrimaryKeyConstraint('id', name=op.f('PK__kmh_defi__3213E83FC5E516A5'))
    )
    op.drop_table('daily_credit_card_limits')
    op.drop_table('kmh_limits')
    op.drop_table('credit_card')
    op.drop_table('status_history')
    op.drop_table('card_brands')
    op.rename_table('banks', 'bank')
    
    # ### end Alembic commands ###
