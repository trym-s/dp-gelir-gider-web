"""init

Revision ID: ed812c02ca7f
Revises: 
Create Date: 2025-07-21 19:53:49.814622

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ed812c02ca7f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bank',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('logo_url', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('card_brand',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('logo_url', sa.String(length=255), nullable=True),
    sa.Column('icon_component_name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('expense_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('income_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('region',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('bank_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('overdraft_limit', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('bank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bank_id'], ['bank.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('banka_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bank_id', sa.Integer(), nullable=False),
    sa.Column('tarih', sa.Date(), nullable=False),
    sa.Column('period', sa.Enum('morning', 'evening', name='period'), nullable=False),
    sa.Column('miktar_try', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('miktar_usd', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('miktar_eur', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('kur_usd_try', sa.Numeric(precision=15, scale=4), nullable=True),
    sa.Column('kur_eur_try', sa.Numeric(precision=15, scale=4), nullable=True),
    sa.ForeignKeyConstraint(['bank_id'], ['bank.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('bank_id', 'tarih', 'period', name='_bank_tarih_period_uc')
    )
    op.create_table('payment_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account_name',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('payment_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['payment_type_id'], ['payment_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('credit_card',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('limit', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('cash_advance_limit', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('statement_day', sa.Integer(), nullable=False),
    sa.Column('due_day', sa.Integer(), nullable=False),
    sa.Column('bank_account_id', sa.Integer(), nullable=False),
    sa.Column('payment_type_id', sa.Integer(), nullable=False),
    sa.Column('card_brand_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bank_account_id'], ['bank_account.id'], ),
    sa.ForeignKeyConstraint(['card_brand_id'], ['card_brand.id'], ),
    sa.ForeignKeyConstraint(['payment_type_id'], ['payment_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('payment_type_id')
    )
    op.create_table('budget_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('account_name_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_name_id'], ['account_name.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('credit_card_transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('credit_card_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['credit_card_id'], ['credit_card.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expense',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('payment_type_id', sa.Integer(), nullable=True),
    sa.Column('account_name_id', sa.Integer(), nullable=True),
    sa.Column('budget_item_id', sa.Integer(), nullable=True),
    sa.Column('remaining_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['account_name_id'], ['account_name.id'], ),
    sa.ForeignKeyConstraint(['budget_item_id'], ['budget_item.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['expense_group.id'], ),
    sa.ForeignKeyConstraint(['payment_type_id'], ['payment_type.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('income',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('received_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Enum('UNRECEIVED', 'RECEIVED', 'PARTIALLY_RECEIVED', 'OVER_RECEIVED', name='incomestatus'), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.Column('account_name_id', sa.Integer(), nullable=False),
    sa.Column('budget_item_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_name_id'], ['account_name.id'], ),
    sa.ForeignKeyConstraint(['budget_item_id'], ['budget_item.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['income_group.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('income_receipt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('income_id', sa.Integer(), nullable=False),
    sa.Column('receipt_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('receipt_date', sa.Date(), nullable=False),
    sa.Column('notes', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['income_id'], ['income.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expense_id', sa.Integer(), nullable=False),
    sa.Column('payment_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['expense_id'], ['expense.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payment')
    op.drop_table('income_receipt')
    op.drop_table('income')
    op.drop_table('expense')
    op.drop_table('credit_card_transaction')
    op.drop_table('budget_item')
    op.drop_table('credit_card')
    op.drop_table('account_name')
    op.drop_table('payment_type')
    op.drop_table('banka_log')
    op.drop_table('bank_account')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('region')
    op.drop_table('income_group')
    op.drop_table('expense_group')
    op.drop_table('company')
    op.drop_table('card_brand')
    op.drop_table('bank')
    # ### end Alembic commands ###
