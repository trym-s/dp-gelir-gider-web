"""loans7

Revision ID: ae8369c4725a
Revises: 
Create Date: 2025-07-22 17:14:51.499069

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ae8369c4725a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('loans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False, comment="Krediyi ayırt etmek için kullanılan isim (örn: 'Nisan 2025 Taşıt Kredisi')"),
    sa.Column('bank_account_id', sa.Integer(), nullable=False, comment='Kredinin yattığı banka hesabı'),
    sa.Column('loan_type_id', sa.Integer(), nullable=False, comment='Kredinin türü (örn: Taksitli, Rotatif)'),
    sa.Column('amount_drawn', sa.Numeric(precision=10, scale=2), nullable=False, comment='Çekilen toplam anapara tutarı'),
    sa.Column('term_months', sa.Integer(), nullable=False, comment='Kredinin vadesi (ay olarak)'),
    sa.Column('monthly_interest_rate', sa.Float(), nullable=False, comment='Bankanın verdiği vergisiz, net aylık faiz oranı (örn: 0.05)'),
    sa.Column('bsmv_rate', sa.Float(), nullable=False, comment='Faiz üzerinden alınan BSMV oranı (varsayılan: 0.15)'),
    sa.Column('payment_due_day', sa.Integer(), nullable=False, comment="Ödemenin her ayın kural olarak hangi gününde beklendiğini gösteren tamsayı (örn: 15). Bir sonraki ödeme tarihi, bu 'kural' günü baz alınarak hesaplanır."),
    sa.Column('monthly_payment_amount', sa.Numeric(precision=10, scale=2), nullable=True, comment='Hesaplama sonucu bulunan, her ay ödenecek sabit taksit tutarı'),
    sa.Column('remaining_principal', sa.Numeric(precision=10, scale=2), nullable=False, comment='Kalan mevcut anapara borcu. Her ödemede güncellenir.'),
    sa.Column('status', sa.Enum('PENDING_APPROVAL', 'ACTIVE', 'PAID_IN_FULL', 'OVERDUE', 'DEFAULTED', name='loanstatus'), nullable=False, comment='Kredinin mevcut durumu (Aktif, Ödendi vb.)'),
    sa.Column('date_drawn', sa.Date(), nullable=False, comment='Kredinin çekildiği, yani paranın hesaba geçtiği ve borcun resmen başladığı tarih.'),
    sa.Column('next_payment_due_date', sa.Date(), nullable=True, comment='Bir sonraki taksit ödemesinin beklendiği *net* tarih. Bu alan, vadesi geçen kredileri bulmak gibi operasyonel sorgularda kullanılır ve performansı artırır.'),
    sa.Column('description', sa.Text(), nullable=True, comment='Krediyle ilgili ek notlar'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Bu kaydın veritabanında ilk oluşturulduğu zaman damgası.'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Bu kaydın en son güncellendiği zaman damgası.'),
    sa.ForeignKeyConstraint(['bank_account_id'], ['bank_account.id'], ),
    sa.ForeignKeyConstraint(['loan_type_id'], ['loan_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('loan_payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('loan_id', sa.Integer(), nullable=False, comment='Bu ödemenin ait olduğu kredi'),
    sa.Column('amount_paid', sa.Numeric(precision=10, scale=2), nullable=False, comment='Müşteriden alınan toplam ödeme tutarı'),
    sa.Column('principal_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Ödenen toplam tutarın anapara borcunu azaltan kısmı'),
    sa.Column('interest_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Ödenen toplam tutarın faiz borcunu karşılayan kısmı (BSMV dahil)'),
    sa.Column('payment_date', sa.Date(), nullable=False, comment='Ödemenin yapıldığı fiili tarih'),
    sa.Column('payment_type', sa.Enum('REGULAR_INSTALLMENT', 'PREPAYMENT', 'SETTLEMENT', 'OTHER', name='loanpaymenttype'), nullable=False, comment='Ödemenin türü (örn: Normal taksit, ara ödeme)'),
    sa.Column('status', sa.Enum('COMPLETED', 'PENDING_CLEARANCE', 'REVERSED', name='loanpaymentstatus'), nullable=False, comment="Ödemenin durumu. Bankadan dönen bir ödeme 'İPTAL EDİLDİ' olarak işaretlenebilir."),
    sa.Column('notes', sa.String(length=255), nullable=True, comment='Ödemeyle ilgili notlar veya banka referans numarası'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Bu kayıt defterine işlemin girildiği zaman damgası'),
    sa.ForeignKeyConstraint(['loan_id'], ['loans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('loan_payments')
    op.drop_table('loans')
    # ### end Alembic commands ###
